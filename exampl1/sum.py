a=10; b=2000
print("a = ", a, "; b  = ", b)
print("a + b =", a + b)
print("a - b =", a - b)
print("a * b =", a * b)
print("a / b =", a / b)
print("a % b =", a % b)
print("a ** b =", a ** b)  # 10 ^ 2000 也可以计算，太强大啦！
print("a // b =", a // b)  # 0
#python中整型不用担心溢出，因为python理论上可以表示无限大的整数，直到把内存挤爆。

a=-7
print("a // b =", a // b)
print("9//2=", 9//2) #4
print("-9//2=", -9//2) #-5

# % 取模，取余数
# // 整除，向下取整

#-----------------------
print("")
print("---------------------------------------")
a = 21; b = 10; c = 0; 
if a == b :
    print("1. a 等于 b")
else:
    print("1. a 不等于 b")

if a != b:
    print("2. a 不等于 b")
else:
    print("2. a 等于b")

# ==, !=, >, <, >=, <=,

#------------------------------------
print("")
print("---------------------------------------------")
a = 60  #a = 0011 1100
b = 13  #b = 0000 1101
c = 0

c = a & b  # c = 0000 1100, c = 8+4 = 12
print("c=",c)  # c =12
print(a >> 3)  # 0000 0111 = 7
print(a << 3)  # 1110 0000 = 偶数

# & 与
# | 或
# ^ 异或
# ~ 非
# << 左移， 不是循环移位
# >> 右移， 不是循环移位
#--------------------------------------

# 逻辑运算符： and or not
# 成员运算符： in, not in
# 身份运算符： is, is not

'''
Python 中没有 ++ 或 -- 自运算符
因为在 Python 里的数值和字符串之类的都是不可变对象，对不可变对象操作的结果都会生成一个新的对象。
'''






